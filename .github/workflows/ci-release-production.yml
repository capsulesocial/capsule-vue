name: Capsule Vue -- Production Deploy
on:
  release:
    types: [published]
env:
  GITHUB_USER: dgrisham
  GITHUB_TOKEN: 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
  DEPLOY_ENV: production

jobs:

  install-dependencies:
    runs-on: ubuntu-latest
    container:
      image: node:16-alpine
    steps:

      - uses: actions/checkout@v1

      - name: install git
        run: apk add --no-cache git

      - name: yarn install
        run: yarn install

      # this copy of node_modules will be used for the rest of the workflow
      - name: compress node_modules
        run: tar -czf node_modules.tar.gz node_modules
      - uses: actions/upload-artifact@v2
        with:
          name: node_modules.tar.gz
          path: node_modules.tar.gz

  lint:
    needs: install-dependencies
    runs-on: ubuntu-latest
    container:
      image: node:16-alpine
    steps:

      - uses: actions/checkout@v1

      - uses: actions/download-artifact@v2
        with:
          name: node_modules.tar.gz
      - name: extract node_modules
        run: tar -xzf node_modules.tar.gz

      - name: lint
        run: yarn lint

  release:
    needs: lint
    runs-on: ubuntu-latest
    container:
      image: node:16-alpine
    steps:

      - uses: actions/checkout@v1

      - name: install git
        run: apk add --no-cache git

      - name: Set DEPLOY_ENV + DEPLOY_TARGET in github env
        run: |
          cat <<EOF >.env
            CONTRACT_NAME="capsule-beta.testnet"
            DOMAIN="https://blogchain.app"
            CAPSULE_SERVER="https://blogchain.app/server"
            ORBIT_URL="https://node1.blogchain.app"
            TORUS_GOOGLE_VERIFIER="blogchain-app-production"
            TORUS_GOOGLE_CLIENTID="367906518235-1gh9efo0518u43fnaj3qfgob64fv1o8p.apps.googleusercontent.com"
            TORUS_DISCORD_VERIFIER="blogchain-app-discord-production"
            TORUS_DISCORD_CLIENTID="947888768269033512"
            TORUS_NETWORK=mainnet
          EOF

      - name: Set deploy environment vars
        run: echo "RELEASE_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: actions/download-artifact@v2
        with:
          name: node_modules.tar.gz
      - name: extract node_modules
        run: tar -xzf node_modules.tar.gz

      - name: build
        run: yarn build:web

      - name: Compress capsule-vue static site
        run: |
          [[ -d .app ]] || { echo "Missing .app, exiting" >&2 ; exit 1 ; }
          build_name="capsule_vue-$DEPLOY_ENV-$RELEASE_ID"
          mv .app $build_name
          tar -czvf "${build_name}.tar.gz" "$build_name"
          echo "BUILD_NAME=$build_name" >> $GITHUB_ENV
        env:
          DEPLOY_ENV: ${{ env.DEPLOY_ENV }}
          RELEASE_ID: ${{ env.RELEASE_ID }}

      - name: Upload build as release asset
        uses: ncipollo/release-action@v1
        with:
          artifacts:    ${{ env.BUILD_NAME }}.tar.gz
          token:        ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true

  deploy:
    needs: release
    runs-on: ubuntu-latest
    container:
      image: lexauw/ansible-alpine:latest
    steps:

      - uses: actions/checkout@v1

      - name: install bash
        run: apk add --no-cache bash

      - name: Set deploy environment vars
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}"     >> $GITHUB_ENV
          echo "RELEASE_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Deploy updated images
        run: ./.github/scripts/deploy.sh
        env:
          DEPLOY_ENV:          ${{ env.DEPLOY_ENV }}
          RELEASE_ID:          ${{ env.RELEASE_ID }}
          RELEASE_TAG:         ${{ env.RELEASE_TAG }}
          GITHUB_USER:         ${{ env.GITHUB_USER }}
          GITHUB_TOKEN:        ${{ env.GITHUB_TOKEN }}
          ANSIBLE_PRIVATE_KEY: ${{ secrets.ANSIBLE_PRIVATE_KEY }}
